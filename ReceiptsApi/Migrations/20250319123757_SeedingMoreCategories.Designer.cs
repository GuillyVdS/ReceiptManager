// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace WebServer.Migrations
{
    [DbContext(typeof(ReceiptsContext))]
    [Migration("20250319123757_SeedingMoreCategories")]
    partial class SeedingMoreCategories
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Unknown"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Shared"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "PersonA"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "PersonB"
                        });
                });

            modelBuilder.Entity("LineItem", b =>
                {
                    b.Property<int>("LineItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LineItemId"));

                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LineItemId");

                    b.HasIndex("CategoryId");

                    b.ToTable("LineItems");
                });

            modelBuilder.Entity("Receipt", b =>
                {
                    b.Property<int>("ReceiptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ReceiptId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ReceiptId");

                    b.ToTable("Receipts");
                });

            modelBuilder.Entity("ReceiptLineItem", b =>
                {
                    b.Property<int>("ReceiptId")
                        .HasColumnType("integer");

                    b.Property<int>("LineItemId")
                        .HasColumnType("integer");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("ReceiptId", "LineItemId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("LineItemId");

                    b.ToTable("ReceiptLineItems");
                });

            modelBuilder.Entity("LineItem", b =>
                {
                    b.HasOne("Category", "Category")
                        .WithMany("LineItems")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ReceiptLineItem", b =>
                {
                    b.HasOne("Category", "Category")
                        .WithMany("ReceiptItems")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LineItem", "LineItem")
                        .WithMany("ReceiptItems")
                        .HasForeignKey("LineItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Receipt", "Receipt")
                        .WithMany("ReceiptItems")
                        .HasForeignKey("ReceiptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("LineItem");

                    b.Navigation("Receipt");
                });

            modelBuilder.Entity("Category", b =>
                {
                    b.Navigation("LineItems");

                    b.Navigation("ReceiptItems");
                });

            modelBuilder.Entity("LineItem", b =>
                {
                    b.Navigation("ReceiptItems");
                });

            modelBuilder.Entity("Receipt", b =>
                {
                    b.Navigation("ReceiptItems");
                });
#pragma warning restore 612, 618
        }
    }
}
